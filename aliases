# -*- Mode: sh -*-


#
# Hosts
#

# Would be better for these to be evaluated at invocation time
#[[ $wiredip = 172.31.* ]] && alias shed='ssh -p 23 gentry@ssh.surlycat.com'
alias ssh='ssh -A'
alias atom='ssh -A atom.lan'
alias beast='ssh -p 2222 gentry@beast.lan'
alias bigbook='ssh gentry@bigbook.lan'
alias boof='ssh boof.lan'
alias crappo='ssh crappo.lan'
alias movies='ssh gentry@movies.lan'
alias octo='ssh octo.lan'
alias pitch='ssh pitch.zapto.org'
alias pi4='ssh pi4.lan'
alias surly='ssh gentry@surlycat.zapto.org'
alias tiny='ssh gentry@tiny.zapto.org'
alias tinycat='ssh tinycat.lan'
alias tinycow='ssh tinycow.lan'

#
# Mac/Linux Specific Stuff (ls)
#

# enable color support of ls and also add handy aliases
if [ `uname` == 'Darwin' ]; then
  alias ls='ls -FG'	       # On Mac OS
  #wiredip=`ifconfig en0 | grep 'inet ' | cut -f2 -d' '`
  alias upgrade='brew update && brew upgrade && brew cleanup'
  alias packages="brew leaves"
else
  # Not Mac means some kind of Linux
  #wiredip=`ifconfig eth0 | grep 'inet ' | cut -f2 -d' '`
  eval "`dircolors -b`"
  alias ls='ls --color=auto'   # List files with symbols (/ * @) and colors
  alias dir='ls --color=auto --format=vertical'
  alias vdir='ls --color=auto --format=long'
  alias bap='sudo apt-get update && sudo apt-get -y upgrade && sudo apt-get autoremove'
  alias upgrade='apt-get update && apt-get upgrade && apt-get clean'
  alias packages="dpkg-query --show --showformat='\${Installed-Size}\t\${Package}\n' | sort -rh | head -25 | awk '{print \$1/1024, \$2}'"
  alias package-purge="dpkg --list |grep \"^rc\" | cut -d \" \" -f 3 | xargs sudo dpkg --purge"
  alias sethostname="hostnamectl set-hostname"
  alias provides="dpkg -S"
  alias agi='sudo apt-get install -y'
  alias l='ls -alF'            # List files including hidden files, with symbols
fi

alias myip="dig TXT +short o-o.myaddr.l.google.com @ns1.google.com | awk -F'\"' '{print \$2}'"
alias myloc="curl -s https://ipinfo.io/$(myip) | python -c \"import sys, json; d=json.load(sys.stdin); print('{}, {}'.format(d['city'], d['region']))\""
alias weather="MYLOC=\$(myloc) && figlet \"\$MYLOC\" | lolcat; curl --silent wttr\.in/\"\$MYLOC\"?0?A?u | grep -v \"Weather report\""


alias make='make -j8'
alias la='ls -alf'
alias l='ls -lAh --color'
alias lr='ls -R | grep ":$" | sed -e '\''s/:$//'\'' -e '\''s/[^-][^\/]*\//--/g'\'' -e '\''s/^/   /'\'' -e '\''s/-/|/'\'''
alias mv='mv -i'             # Interactive confirmation before move
alias rm='rm -i'             # Interactive confirmation before delete
alias cp='cp -ip'            # Confirm before overwrite; preserve timestamp

# Whoa.
function wikipedia() {
    if [ "${1}" ]; then dig + short +TXT "${1}".wp.dg.cx; fi
}

alias freq='cut -f1 -d" " ~/.bash_history | sort | uniq -c | sort -nr | head -n 30'

alias clean="find . \( -name \*~ -or -name build \) -print -exec rm -rf {} \;"

alias ccat='pygmentize -O bg=dark'

#
# Remote control
#

function sssh() {
    ssh -t "$1" 'tmux attach || tmux new || screen -DR'
}

alias wget='wget --content-disposition'

alias spssh="stty -echo; printf \"Pw: \"; read PASS; stty echo; echo \"\"; echo \"${PASS}\" | pssh -t 800 -h ~/.not_public.d/hosts -i --"
alias pssh="pssh -t 800 -h ~/.not_public.d/hosts -i --"

function authme() {
  ssh "$1" 'mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys' \
    < ~/.ssh/id_dsa.pub
}


#
# Backup/Rsync Stuff
#

# Rsync the arg to beast

function bkp() {
    rsync --verbose --stats --progress \
	--archive --compress \
	--exclude=gentry/Library/Caches \
        --exclude=gentry/Library/Application\ Support/Google/Chrome/Default/Cache \
	--exclude=gentry/.Spotlight-V100 \
	--exclude=gentry/.fseventsd \
	--delete --delete-excluded --delete-after \
	--ignore-errors \
	--partial-dir=.rsync-partial  \
	"$1" beast.lan:more/
}

function bkp_audio() {
    rsync -av ~/Audio/ gentry@beast.lan:more/Audio/
}

function bkp_movies() {
    rsync -av --stats --progress --partial-dir=.rsync-partial \
          ~/Movies/ beast.lan:more/Movies/
}

function rsyncp() {
    rsync -av --stats --progress "$1" "$2"
}

# Like cp, but maybe more preservey
function tarcopy() {
    tar -cpSf - "$1" | tar -xpSf - --keep-newer-files -C "$2";
}

function tarcp() {
    tar cf - ${1} | (cd ${2} && tar xf -)
}

# cd into the source directory first so it extracts over (merges) the
# destination, but don't overwrite newer files there.
function tarmerge() {
    tar -cpSf - -C "$1" . | tar -xpSf - --keep-newer-files -C "$2";
}

alias e="emacs -nw"
alias today="emacs -nw ~/txt/todo/today.txt"
alias whatsup='nmap -sP 192.168.1.1/24'

# VNC stuff
# One-time VNC of existing desktop:
alias vncme='x11vnc -rfbauth ~/.vnc/passwd -shared -noxdamage'
# VNC Server
alias vncs='vncserver -geometry 1280x1024'
alias vncp='vncserver :1 -geometry 1024×768 -depth 16 -pixelformat rgb565'
alias startvnc='sudo /usr/bin/x11vnc -xkb -auth /var/run/lightdm/root/:0 -noxrecord -noxfixes -noxdamage -rfbauth /etc/x11vnc.pass -forever -bg -rfbport 5900 -display :0 -o /var/log/x11vnc.log'
alias stopvnc='x11vnc -display :0 -remote stop'

# Spice stuff
alias ltspice='wine ~/.wine/drive_c/Program\ Files/LTC/LTspiceIV/scad3.exe'
alias netlistviewer='wine ~/.wine/drive_c/Program\ Files/NetlistViewer/NetlistViewer.exe'

# Usage: fixhost <host with unknown key>
alias fixhost="ssh-keygen -f ~/.ssh/known_hosts -R"

# Disk space
alias ducks='du -cks .* * | sort -rn | head -11'
alias dur='du -sm * | sort -n'

# History
alias hs='history | grep --color=auto'
alias h=history

# Keyboard
alias swapcap='setxkbmap -layout us -option ctrl:nocaps'
alias swapcaps='setxkbmap -layout us -option ctrl:nocaps'

#function psg() { /bin/ps auxww | egrep -i (PID|"$1")" ;}
alias psg="/bin/ps auxww | grep -v grep | grep -i"

# Where's that name?  Skip .git directories.
alias wtn='find . -path ./.git -prune -o -type f -name'

# Where's that found? (grep all files in current directory tree)
function wtf() {
    find . -path ./.git -prune -o -type f -exec grep -in "${1}" {} /dev/null \;
}

# Where's That Found, only python files.
function wtfpy() {
    find . -path ./.git -prune -o -name \*.py -exec grep -in "${1}" {} /dev/null \;
}

# Watching network and disk stuff
alias apfsuck='sudo tmutil listlocalsnapshots / | cut -f4 -d. | xargs -n 1 tmutil deletelocalsnapshots'

spy() { lsof -i -P +c 0 +M | grep -i "$1"; }
alias netlisteners='lsof -i -P | grep LISTEN'
alias sniff="sudo ngrep -d 'en0' -t '^(GET|POST) ' 'tcp and port 80'"
alias dskload="ps faux|awk '\$8 ~ /D/{print}'"
alias ports="sudo lsof -i"
alias ports2="sudo netstat -lptu"
alias ports3="sudo netstat -tulpn"
alias swaptop="find /proc -maxdepth 2 -path \"/proc/[0-9]*/status\" -readable -exec awk -v FS=\":\" '{process[\$1]=\$2;sub(/^[ \t]+/,\"\",process[\$1]);} END {if(process[\"VmSwap\"] && process[\"VmSwap\"] != \"0 kB\") printf \"%10s %-30s %20s\n\",process[\"Pid\"],process[\"Name\"],process[\"VmSwap\"]}' '{}' \; | awk '{print \$(NF-1),\$0}' | sort -h | cut -d \" \" -f2-"

alias aliases='pushd ~/myDotfiles && git sync && emacs -nw aliases && popd && source ~/.aliases && echo "run uda if the alias turns out to be useful."'
alias realias='source ~/.aliases'
alias uda='pushd ~/myDotfiles && git sync && git commit aliases -m "Auto-updated aliases" && git sync && source aliases && popd'

alias hs='history | grep --color=auto'
alias h=history


#
# Git stuff
#

alias github="chrome \`git remote -v | grep github.com | grep fetch | head -1 | field 2 | sed 's/git:/http:/g'\`"

# status, colorized, with branch name
alias gs="git branch && (git -c color.status=always status | sed 's/On branch .*//')"
alias gd='git diff'

# Git logs
alias gl="git log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias gsl='git shortlog -nsw -e'
alias gitlog='git log --graph --all --format=format:'\''%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'\'''\''          %C(white)%s%C(reset) %C(bold white)— %an%C(reset)'\'' --abbrev-commit'
alias lg='git log --graph --full-history --all --color --pretty=format:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s"'
alias gh='git hist'
alias ga='git add'
alias gp='git pull && git push'
alias gc='git commit'
alias gk='git checkout'
alias grm='git rm'
alias co='git checkout'
alias master='git checkout master'

function gbranches() {
    git branch -a | grep -v 'remotes/origin/HEAD' | grep "remotes/origin" | sed 's:remotes/origin/::'
}
function git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1:/'
}

# If you copy the filenames from a git status, degit() will make them
# suitable for use on the command line.
function degit() {
    pbpaste | sed s/modified://g | tr -d "\n";
}
function gcg() {
    git clone git@github.com:${1}
}
function ci() {
    git commit "${1}" -m "${2}"
}
alias rmpasted='pbpaste | xargs rm -f'

alias stripcolor="sed -r \"s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g\""

# Quick git commit
function m() {
  git add . -A
  if [ -z "$1" ]
    then
      N=0
      COMMITS=('Bugfix' 'Formatting/style fixup' 'Docs only' 'Misc development work')
      for i in "${COMMITS[@]}"
      do
        N=`expr $N + 1`
        echo "[${N}] ${i}"
      done

      read -r selection

      MESSAGE=${COMMITS[selection]}
      echo "${MESSAGE}"
      git commit -m "${MESSAGE}"

    else
      echo 'other'
      git commit -m "$1"
  fi
}


# Subversion stuff
# shows the full history of a given file as a sequence of
# logentry/diff pairs.  The first revision of the file is emitted as
# full text since there's not previous version to compare it to.

function svn_history_of_file() {
    url=$1 # current url of file
    svn log -q "$url" | grep -E -e "^r[[:digit:]]+" -o | cut -c2- | sort -n | {
#       first revision as full text
        echo
        read -r r
        svn log -r"$r" "$url@HEAD"
        svn cat -r"$r" "$url@HEAD"
        echo
#       remaining revisions as differences to previous revision
        while read -r r
        do
            echo
            svn log -r"$r" "$url@HEAD"
            svn diff -c"$r" "$url@HEAD"
            echo
        done
    }
}
# Subversion diff, colorized
function svdiff() {
    echo ${1}
    echo ' '
    svn diff -x --ignore-all-space ${1} | pygmentize -l 256 -l diff
}

#
# Python Stuff
#

# Choose python venv
alias p2="deactivate 2>&1 >/dev/null; source ~/.virtualenv/v/bin/activate"
alias p3="deactivate 2>&1 >/dev/null; source ~/.virtualenv/3/bin/activate"

alias pudb='python -m pudb'

# Python command-line tools
alias json="python -mjson.tool"
alias miniterm="python -m serial.tools.miniterm --raw"
alias randport="python -c \"import random; print(random.randint(2048,65000))\""
alias servethis="python -c 'import SimpleHTTPServer; SimpleHTTPServer.test()'"

function autopep() {
    autopep8 -a --max-line-length=99 --diff "${1}" | pygmentize -l diff | less
}

function autopepit() {
    autopep8 -a --max-line-length=99 --in-place "${1}"
}
