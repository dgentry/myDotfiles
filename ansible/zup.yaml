- name: Remove Ubuntu Junk
  hosts: z
  tasks:
  - name: remove ubuntu motd spam
    become: true
    file:
      path: "/etc/update-motd.d/{{ item }}"
      state: absent
    loop:
      - 10-help-text
      - 50-motd-news
      - 80-livepatch
      - 85-fwupd
      - 88-esm-announce
      - 90-updates-available
      - 91-release-upgrade
      - 91-contract-ua-esm-status
      - 95-hwe-eol
    when: ansible_distribution == 'Ubuntu'

- name: Check space
  hosts: z

  tasks:

    - set_fact:
        mount: "{{ ansible_mounts | first }}"
        disk_limit: 0.90

    - set_fact:
        disk_usage: "{{ mount.size_total - mount.size_available }}"
        disk_total_s: "{{ (mount.size_total / 1000000000) | round(3, 'common') }} GB"
        disk_limit_ratio_s: "{{ (100 * disk_limit|float) | round(3, 'common') }}%"

    - set_fact:
        disk_usage_ratio: "{{ disk_usage|float / mount.size_total }}"
        disk_usage_s: "{{ (disk_usage|float / 1000000000) | round(3, 'common') }} GB"

    - set_fact:
        disk_usage_ratio_s: "{{ (100 * disk_usage_ratio|float) | round(3, 'common') }}%"

    - debug:
        msg: "Available: {{ (mount.size_available/ 1000000000) | round(3, 'common') }} GB \n disk usage {{ disk_usage_s }} of total {{ disk_total_s }} ({{ disk_usage_ratio_s }}) (within limit {{ disk_limit_ratio_s }})"

    - name: We have at least 5% free
      assert:
        that: ( (disk_usage|float)/mount.size_total ) < disk_limit|float
        msg: "Disk usage {{ disk_usage_ratio_s }} exceeds {{ disk_limit_ratio_s }}"
      tags: disk
      any_errors_fatal: false

    - name: We have at least 500 MB
      assert:
        that: mount.size_available > 500000000
        msg: "Available disk space {{ mount.size_available }} < 500 MB"
      tags: disk
      any_errors_fatal: false

    # - name: indicate disks okay to statuscake
    #   local_action: command /usr/bin/wget 'https://push.statuscake.com/?PK=abcdefghi&TestID=123456&time=0'
    #   run_once: true

- name: Bulk Upgrayyed
  hosts: z
  # strategy: free
  become: yes
  become_user: root

  tasks:


  - name: apt-get autoremove equivalent
    apt:
      autoremove: yes
      autoclean: yes

  - name: Add modern python repo
    apt_repository:
      validate_certs: no
      repo: 'ppa:deadsnakes/ppa'
      state: present

  - name: Update and make sure python3.10 is installed
    apt:
      update_cache: yes
      name:
        - python3.10
        - python3.10-venv

  - name: Upgrade
    apt:
      upgrade: full

  - name: apt-get autoremove equivalent
    apt:
      autoremove: yes
      autoclean: yes

  # - name: Purge residual kernel packages
  #    shell: apt-get remove -y --purge $(dpkg -l | grep "^rc\s*linux-image-" | awk '{print $2}' | tr '\-n' ' ')
  #   register: apt_result
  #   changed_when: "'packages will be REMOVED' in apt_result.stdout"

- name: Update my dotfiles everywhere
  hosts: z
  tasks:

  - name: Fetch my stuff
    shell: cd myDotfiles && GIT_SSH_COMMAND="ssh -i ~/.ssh/id_ed25519_github" git pull
    async: 45
    poll: 5
    register: pull_result
    changed_when: pull_result.stdout is not search('Already up to date.')
    tags:
      - fetchstuff

  - debug:
      var: pull_result

- name: Update my emacs packages everywhere
  hosts: z
  tasks:

  - name: Update emacs
    shell: emacs --batch -l ~/.emacs.d/init.el -f auto-package-update-now
    register: run_result
    changed_when: run_result.stdout is search('Parsing tar file')

  - debug:
      var: run_result
